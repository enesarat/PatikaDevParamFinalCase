// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShoppingMate.Data.Context;

#nullable disable

namespace ShoppingMate.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShoppingMate.Core.Model.Concrete.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastActivity")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("ShoppingMate.Core.Model.Concrete.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 981, DateTimeKind.Local).AddTicks(5495),
                            IsActive = true,
                            Name = "Clothes"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 981, DateTimeKind.Local).AddTicks(5507),
                            IsActive = true,
                            Name = "Household Appliances"
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 981, DateTimeKind.Local).AddTicks(5509),
                            IsActive = true,
                            Name = "Food"
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 981, DateTimeKind.Local).AddTicks(5509),
                            IsActive = true,
                            Name = "Furniture"
                        });
                });

            modelBuilder.Entity("ShoppingMate.Core.Model.Concrete.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBought")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ShoppingListId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("ShoppingListId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 981, DateTimeKind.Local).AddTicks(6961),
                            IsActive = true,
                            IsBought = false,
                            ProductId = 1,
                            Quantity = 3,
                            ShoppingListId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 981, DateTimeKind.Local).AddTicks(6968),
                            IsActive = true,
                            IsBought = false,
                            ProductId = 2,
                            Quantity = 1,
                            ShoppingListId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 981, DateTimeKind.Local).AddTicks(6969),
                            IsActive = true,
                            IsBought = false,
                            ProductId = 3,
                            Quantity = 5,
                            ShoppingListId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 981, DateTimeKind.Local).AddTicks(6971),
                            IsActive = true,
                            IsBought = false,
                            ProductId = 4,
                            Quantity = 2,
                            ShoppingListId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 981, DateTimeKind.Local).AddTicks(6972),
                            IsActive = true,
                            IsBought = false,
                            ProductId = 5,
                            Quantity = 1,
                            ShoppingListId = 2
                        },
                        new
                        {
                            Id = 6,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 981, DateTimeKind.Local).AddTicks(7006),
                            IsActive = true,
                            IsBought = false,
                            ProductId = 6,
                            Quantity = 1,
                            ShoppingListId = 2
                        },
                        new
                        {
                            Id = 7,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 981, DateTimeKind.Local).AddTicks(7008),
                            IsActive = true,
                            IsBought = false,
                            ProductId = 7,
                            Quantity = 2,
                            ShoppingListId = 2
                        },
                        new
                        {
                            Id = 8,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 981, DateTimeKind.Local).AddTicks(7009),
                            IsActive = true,
                            IsBought = false,
                            ProductId = 8,
                            Quantity = 1,
                            ShoppingListId = 1
                        },
                        new
                        {
                            Id = 9,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 981, DateTimeKind.Local).AddTicks(7010),
                            IsActive = true,
                            IsBought = false,
                            ProductId = 9,
                            Quantity = 10,
                            ShoppingListId = 3
                        },
                        new
                        {
                            Id = 10,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 981, DateTimeKind.Local).AddTicks(7011),
                            IsActive = true,
                            IsBought = false,
                            ProductId = 10,
                            Quantity = 2,
                            ShoppingListId = 3
                        },
                        new
                        {
                            Id = 11,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 981, DateTimeKind.Local).AddTicks(7012),
                            IsActive = true,
                            IsBought = false,
                            ProductId = 11,
                            Quantity = 5,
                            ShoppingListId = 3
                        },
                        new
                        {
                            Id = 12,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 981, DateTimeKind.Local).AddTicks(7013),
                            IsActive = true,
                            IsBought = false,
                            ProductId = 12,
                            Quantity = 3,
                            ShoppingListId = 3
                        },
                        new
                        {
                            Id = 13,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 981, DateTimeKind.Local).AddTicks(7014),
                            IsActive = true,
                            IsBought = false,
                            ProductId = 13,
                            Quantity = 4,
                            ShoppingListId = 4
                        },
                        new
                        {
                            Id = 14,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 981, DateTimeKind.Local).AddTicks(7015),
                            IsActive = true,
                            IsBought = false,
                            ProductId = 14,
                            Quantity = 1,
                            ShoppingListId = 4
                        },
                        new
                        {
                            Id = 15,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 981, DateTimeKind.Local).AddTicks(7016),
                            IsActive = true,
                            IsBought = false,
                            ProductId = 15,
                            Quantity = 2,
                            ShoppingListId = 4
                        },
                        new
                        {
                            Id = 16,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 981, DateTimeKind.Local).AddTicks(7017),
                            IsActive = true,
                            IsBought = false,
                            ProductId = 16,
                            Quantity = 5,
                            ShoppingListId = 4
                        });
                });

            modelBuilder.Entity("ShoppingMate.Core.Model.Concrete.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("UnitType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 982, DateTimeKind.Local).AddTicks(5946),
                            IsActive = true,
                            Name = "Blue Jean",
                            Price = 80m,
                            Stock = 100,
                            UnitType = "piece"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 982, DateTimeKind.Local).AddTicks(5950),
                            IsActive = true,
                            Name = "Leather Jacket",
                            Price = 150m,
                            Stock = 100,
                            UnitType = "piece"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 982, DateTimeKind.Local).AddTicks(5952),
                            IsActive = true,
                            Name = "Sweetshirt",
                            Price = 60m,
                            Stock = 100,
                            UnitType = "piece"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 982, DateTimeKind.Local).AddTicks(5953),
                            IsActive = true,
                            Name = "Dress",
                            Price = 200m,
                            Stock = 100,
                            UnitType = "piece"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 982, DateTimeKind.Local).AddTicks(5954),
                            IsActive = true,
                            Name = "Washing Machine",
                            Price = 500m,
                            Stock = 50,
                            UnitType = "piece"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 982, DateTimeKind.Local).AddTicks(5956),
                            IsActive = true,
                            Name = "Vacuum Cleaner",
                            Price = 70m,
                            Stock = 50,
                            UnitType = "piece"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 982, DateTimeKind.Local).AddTicks(5957),
                            IsActive = true,
                            Name = "Television",
                            Price = 400m,
                            Stock = 50,
                            UnitType = "piece"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 982, DateTimeKind.Local).AddTicks(5958),
                            IsActive = true,
                            Name = "Refrigerator",
                            Price = 650m,
                            Stock = 50,
                            UnitType = "piece"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 982, DateTimeKind.Local).AddTicks(5959),
                            IsActive = true,
                            Name = "Pasta",
                            Price = 3m,
                            Stock = 250,
                            UnitType = "piece"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 3,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 982, DateTimeKind.Local).AddTicks(5961),
                            IsActive = true,
                            Name = "Oil",
                            Price = 8m,
                            Stock = 250,
                            UnitType = "piece"
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 3,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 982, DateTimeKind.Local).AddTicks(5962),
                            IsActive = true,
                            Name = "Milk",
                            Price = 5m,
                            Stock = 250,
                            UnitType = "piece"
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 3,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 982, DateTimeKind.Local).AddTicks(5964),
                            IsActive = true,
                            Name = "Bread",
                            Price = 1m,
                            Stock = 250,
                            UnitType = "piece"
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 4,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 982, DateTimeKind.Local).AddTicks(5966),
                            IsActive = true,
                            Name = "Chair",
                            Price = 20m,
                            Stock = 150,
                            UnitType = "piece"
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 4,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 982, DateTimeKind.Local).AddTicks(5967),
                            IsActive = true,
                            Name = "Commode",
                            Price = 30m,
                            Stock = 150,
                            UnitType = "piece"
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 4,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 982, DateTimeKind.Local).AddTicks(5968),
                            IsActive = true,
                            Name = "Seat",
                            Price = 50m,
                            Stock = 150,
                            UnitType = "piece"
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 4,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 982, DateTimeKind.Local).AddTicks(5969),
                            IsActive = true,
                            Name = "Lampshade",
                            Price = 15m,
                            Stock = 150,
                            UnitType = "piece"
                        });
                });

            modelBuilder.Entity("ShoppingMate.Core.Model.Concrete.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ShoppingMate.Core.Model.Concrete.ShoppingList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CompleteTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("ListDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalCost")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("ShoppingLists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 982, DateTimeKind.Local).AddTicks(7138),
                            IsActive = true,
                            IsCompleted = false,
                            Name = "Clothes List",
                            TotalCost = 0.0
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 982, DateTimeKind.Local).AddTicks(7190),
                            IsActive = true,
                            IsCompleted = false,
                            Name = "Household Appliances List",
                            TotalCost = 0.0
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 982, DateTimeKind.Local).AddTicks(7192),
                            IsActive = true,
                            IsCompleted = false,
                            Name = "Foods List",
                            TotalCost = 0.0
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            CreateDate = new DateTime(2023, 3, 6, 23, 30, 53, 982, DateTimeKind.Local).AddTicks(7192),
                            IsActive = true,
                            IsCompleted = false,
                            Name = "Furnitures List",
                            TotalCost = 0.0
                        });
                });

            modelBuilder.Entity("ShoppingMate.Core.Model.Concrete.Account", b =>
                {
                    b.HasOne("ShoppingMate.Core.Model.Concrete.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ShoppingMate.Core.Model.Concrete.Item", b =>
                {
                    b.HasOne("ShoppingMate.Core.Model.Concrete.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ShoppingMate.Core.Model.Concrete.ShoppingList", "ShoppingList")
                        .WithMany("Items")
                        .HasForeignKey("ShoppingListId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ShoppingList");
                });

            modelBuilder.Entity("ShoppingMate.Core.Model.Concrete.Product", b =>
                {
                    b.HasOne("ShoppingMate.Core.Model.Concrete.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ShoppingMate.Core.Model.Concrete.ShoppingList", b =>
                {
                    b.HasOne("ShoppingMate.Core.Model.Concrete.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ShoppingMate.Core.Model.Concrete.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ShoppingMate.Core.Model.Concrete.Role", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("ShoppingMate.Core.Model.Concrete.ShoppingList", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
